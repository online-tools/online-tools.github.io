{"version":3,"sources":["LaunchTool.js","MenuItem.js","DeletingIdenticalStrings.js","ClearTextFormatting.js","CountingTextLength.js","App.js","index.js"],"names":["LaunchTool","_ref","toolsList","map","tool","Component","nameComponent","react_default","a","createElement","key","name","className","id","title","description","comment","MenuItem","items","href","DeletingIdenticalStrings","textToProcess","React","createRef","state","countStrings","submitHandler","e","strings","_this","current","value","split","result","Object","toConsumableArray","Set","join","setState","all","length","preventDefault","render","onSubmit","placeholder","ref","type","concat","ClearTextFormatting","CountingTextLength","count","countParagraphs","text","paragraphs","forEach","str","trim","handleChange","target","lengthText","totalCharacters","charactersWithoutSpaces","replace","words","approximatelyPages","Math","ceil","onChange","ru","en","App","src_MenuItem","src_LaunchTool","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b1bed5b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LaunchTool = ({ toolsList }) => {\r\n  const tools = toolsList.map(tool => {\r\n    let Component = tool.nameComponent;\r\n    return (\r\n      <div key={tool.nameComponent.name}>\r\n        <p className=\"App-intro\" id={tool.nameComponent.name}>{tool.title['ru']}</p>\r\n        {tool.description && <div>{tool.description['ru']}</div>}\r\n        <Component />\r\n        {tool.comment && <div>{tool.comment['ru']}</div>}\r\n      </div>\r\n    )\r\n  });\r\n  return (tools);\r\n};\r\n\r\nexport default LaunchTool;\r\n","import React from 'react';\r\n\r\nconst MenuItem = ({ toolsList }) => {\r\n  const items = toolsList.map(tool => (\r\n    <div className=\"menu-item\" key={tool.nameComponent.name}>\r\n      <a href={'#' + tool.nameComponent.name}>{tool.title['ru']}</a>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"menu\">{items}</div>\r\n  )\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass DeletingIdenticalStrings extends Component {\r\n  textToProcess = React.createRef();\r\n  state = { countStrings: {} };\r\n\r\n  submitHandler = e => {\r\n    let strings = this.textToProcess.current.value.split('\\n');\r\n    let result = [ ...new Set(strings) ];\r\n    this.textToProcess.current.value = result.join('\\n');\r\n    this.setState({\r\n      countStrings: {\r\n        all: strings.length,\r\n        result: result.length,\r\n      },\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  render = () => (\r\n    <form onSubmit={this.submitHandler}>\r\n      <div>\r\n        <textarea className=\"App-textarea\" placeholder=\"Введите текст\" ref={this.textToProcess} />\r\n      </div>\r\n      <div>\r\n        <input type=\"submit\" value=\"Start\" />\r\n        {this.state.countStrings['all'] && (\r\n          <div>{\r\n            this.state.countStrings['all'] === this.state.countStrings['result'] ?\r\n              'Дубликатов строк не найдено' :\r\n              `Всего строк было: ${this.state.countStrings['all']}.\r\n          Удалено: ${this.state.countStrings['all'] - this.state.countStrings['result']}.\r\n          Осталось: ${this.state.countStrings['result']}`\r\n          }</div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DeletingIdenticalStrings;\r\n","import React from 'react';\r\n\r\nconst ClearTextFormatting = () => (\r\n  <form>\r\n    <div>\r\n      <textarea className=\"App-textarea\" placeholder=\"Скопируйте сюда текст\r\nи затем выделите и скопируйте его\" />\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default ClearTextFormatting;\r\n","import React, { Component } from 'react';\r\n\r\nclass CountingTextLength extends Component {\r\n  state = { value: '', count: {} };\r\n\r\n  countParagraphs = text => {\r\n    let paragraphs = 0;\r\n    text.split('\\n').forEach((str) => {\r\n      if (str.trim()) paragraphs += 1;\r\n    });\r\n    return paragraphs;\r\n  };\r\n\r\n  handleChange = ({ target: { value } }) => {\r\n    let lengthText = value.length;\r\n    this.setState({\r\n      value,\r\n      count: {\r\n        totalCharacters: lengthText,\r\n        charactersWithoutSpaces: value.replace(/\\s+/g, '').length,\r\n        words: value.trim().split(/\\s+/).length,\r\n        paragraphs: this.countParagraphs(value),\r\n        approximatelyPages: Math.ceil(lengthText/4250),\r\n      },\r\n    });\r\n  };\r\n\r\n  render = () => (\r\n    <form>\r\n      <div>\r\n        <textarea\r\n          className=\"App-textarea\"\r\n          placeholder=\"Введите текст\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n      {this.state.value && (\r\n        <div>\r\n          Всего символов: {this.state.count.totalCharacters}<br />\r\n          Символов без пробелов: {this.state.count.charactersWithoutSpaces}<br />\r\n          Количество слов: {this.state.count.words}<br />\r\n          Количество абзацев: {this.state.count.paragraphs}<br />\r\n          Примерное количество страниц: {this.state.count.approximatelyPages}<br />\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CountingTextLength;\r\n","import React, { Component } from 'react';\nimport LaunchTool from './LaunchTool';\nimport MenuItem from './MenuItem';\nimport DeletingIdenticalStrings from './DeletingIdenticalStrings';\nimport ClearTextFormatting from './ClearTextFormatting';\nimport CountingTextLength from './CountingTextLength';\nimport './App.css';\n\nconst toolsList = [\n  {\n    nameComponent: DeletingIdenticalStrings,\n    title: {\n      ru: 'Удаление одинаковых строк',\n      en: 'Deleting identical lines',\n    },\n  },\n  {\n    nameComponent: ClearTextFormatting,\n    title: {\n      ru: 'Очистка текста от форматирования',\n      en: 'Clear text formatting',\n    },\n    description: {\n      ru: 'Форма позволяет очистить скопированный текст (с web-страниц или с текстовых редакторов) от форматирования ' +\n        'текста, такого как: жирность, курсив, разные размеры шрифта и пр.',\n      en: 'The form allows you to clear copied text (from web pages or text editors) from text formatting, such as: ' +\n        'bold, italics, different font sizes, etc.',\n    },\n    comment: null,\n  },\n  {\n    nameComponent: CountingTextLength,\n    title: {\n      ru: 'Подсчет длины текста',\n      en: 'Counting text length',\n    },\n  },\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Online-tools</h1>\n        </header>\n        <MenuItem toolsList={toolsList} />\n        <LaunchTool toolsList={toolsList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}