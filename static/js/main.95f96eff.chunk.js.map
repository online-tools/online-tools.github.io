{"version":3,"sources":["components/LaunchTool.js","components/Menu.js","utils/copyTextToClipboard.js","components/DeletingIdenticalStrings.js","components/ClearTextFormatting.js","components/CountingTextLength.js","components/OpeningMultipleLinks.js","components/App/index.js","index.js"],"names":["LaunchTool","_ref","toolsList","map","tool","Component","nameComponent","title","description","comment","react_default","a","createElement","key","name","className","id","ru","Menu","items","href","concat","copyTextToClipboard","text","navigator","clipboard","writeText","status","textArea","document","style","position","top","left","border","padding","width","height","value","body","appendChild","focus","select","execCommand","err","removeChild","fallbackCopyTextToClipboard","DeletingIdenticalStrings","textToProcess","React","createRef","state","countStrings","buttonDisabled","copyInfo","handleChange","_this","setState","handleSubmit","strings","current","split","result","Object","toConsumableArray","Set","join","all","length","handleCopy","copyStatus","setTimeout","render","placeholder","ref","onChange","type","onClick","disabled","ClearTextFormatting","CountingTextLength","count","countParagraphs","paragraphs","forEach","str","trim","target","lengthText","totalCharacters","charactersWithoutSpaces","replace","words","approximatelyPages","Math","ceil","OpeningMultipleLinks","e","url","window","open","handleClear","userAgent","informer","indexOf","en","App","components_Menu","components_LaunchTool","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.95f96eff.chunk.js","sourcesContent":["import React from 'react';\n\nconst LaunchTool = ({ toolsList }) => {\n  const tools = toolsList.map((tool) => {\n    const { nameComponent: Component, nameComponent, title, description, comment } = tool;\n    return (\n      <div key={nameComponent.name}>\n        <p className=\"App-intro\" id={nameComponent.name}>{title.ru}</p>\n        {description && <div>{description.ru}</div>}\n        <Component />\n        {comment && <div>{comment.ru}</div>}\n      </div>\n    );\n  });\n  return (tools);\n};\n\nexport default LaunchTool;\n","import React from 'react';\n\nconst Menu = ({ toolsList }) => {\n  const items = toolsList.map((tool) => {\n    const { nameComponent, title } = tool;\n    return (\n      <div className=\"menu-item\" key={nameComponent.name}>\n        <a href={`#${nameComponent.name}`}>{title.ru}</a>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"menu\">{items}</div>\n  );\n};\n\nexport default Menu;\n","const fallbackCopyTextToClipboard = (text) => {\n  const textArea = document.createElement('textarea');\n  let status;\n\n  // Place in the upper left corner of the screen, regardless of the scroll position\n  textArea.style.position = 'fixed';\n  textArea.style.top = 0;\n  textArea.style.left = 0;\n\n  // Clearing the boundary and setting the minimum size\n  textArea.style.border = 'none';\n  textArea.style.padding = 0;\n  textArea.style.width = '1px';\n  textArea.style.height = '1px';\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    status = document.execCommand('copy');\n  } catch (err) {\n    status = false;\n  }\n\n  document.body.removeChild(textArea);\n  return status;\n};\n\nconst copyTextToClipboard = (text) => {\n  if (!navigator.clipboard) {\n    return fallbackCopyTextToClipboard(text);\n  }\n  navigator.clipboard.writeText(text);\n  return true;\n};\n\nexport default copyTextToClipboard;\n","import React, { Component } from 'react';\nimport copyTextToClipboard from '../utils/copyTextToClipboard';\n\nclass DeletingIdenticalStrings extends Component {\n  textToProcess = React.createRef();\n  state = {\n    countStrings: {},\n    buttonDisabled: true,\n    copyInfo: '',\n  };\n\n  handleChange = () => {\n    this.state.buttonDisabled && this.setState({ buttonDisabled: false });\n  };\n\n  handleSubmit = () => {\n    const strings = this.textToProcess.current.value.split('\\n');\n    const result = [...new Set(strings)];\n    this.textToProcess.current.value = result.join('\\n');\n\n    this.setState({\n      countStrings: {\n        all: strings.length,\n        result: result.length,\n      },\n      buttonDisabled: true,\n    });\n  };\n\n  handleCopy = () => {\n    const copyStatus = copyTextToClipboard(this.textToProcess.current.value);\n    this.setState({ copyInfo: <span>{copyStatus ? 'Скопировано' : 'Не удалось скопировать'}</span> });\n    setTimeout(() => {\n      this.setState({ copyInfo: '' });\n    }, 10000);\n  };\n\n  render = () => (\n    <form>\n      <div>\n        <textarea\n          className=\"App-textarea\"\n          placeholder=\"Введите текст\"\n          ref={this.textToProcess}\n          onChange={this.handleChange}\n        />\n      </div>\n      <div>\n        <button type=\"button\" onClick={this.handleSubmit} disabled={this.state.buttonDisabled}>Start</button>\n        <button type=\"button\" onClick={this.handleCopy}>Copy text</button>\n        {this.state.copyInfo}\n        {this.state.countStrings.all && (\n          <div>{\n            this.state.countStrings.all === this.state.countStrings.result\n              ? 'Дубликатов строк не найдено'\n              : `Всего строк было: ${this.state.countStrings.all}.\n          Удалено: ${this.state.countStrings.all - this.state.countStrings.result}.\n          Осталось: ${this.state.countStrings.result}`\n          }</div>\n        )}\n      </div>\n    </form>\n  );\n}\n\nexport default DeletingIdenticalStrings;\n","import React, { Component } from 'react';\nimport copyTextToClipboard from '../utils/copyTextToClipboard';\n\nclass ClearTextFormatting extends Component {\n  textToProcess = React.createRef();\n  state = { copyInfo: '' };\n\n  handleCopy = () => {\n    const copyStatus = copyTextToClipboard(this.textToProcess.current.value);\n    this.setState({ copyInfo: <span>{copyStatus ? 'Скопировано' : 'Не удалось скопировать'}</span> });\n    setTimeout(() => {\n      this.setState({ copyInfo: '' });\n    }, 10000);\n  };\n\n  render = () => (\n    <form>\n      <div>\n        <textarea\n          className=\"App-textarea\"\n          ref={this.textToProcess}\n          placeholder=\"Скопируйте сюда текст и затем скопируйте результат\"\n        />\n      </div>\n      <div>\n        <button type=\"button\" onClick={this.handleCopy}>Copy text</button>\n        {this.state.copyInfo}\n      </div>\n    </form>\n  );\n}\n\nexport default ClearTextFormatting;\n","import React, { Component } from 'react';\n\nclass CountingTextLength extends Component {\n  state = { value: '', count: {} };\n\n  countParagraphs = (text) => {\n    let paragraphs = 0;\n    text.split('\\n').forEach((str) => {\n      if (str.trim()) paragraphs += 1;\n    });\n    return paragraphs;\n  };\n\n  handleChange = ({ target: { value } }) => {\n    const lengthText = value.length;\n    this.setState({\n      value,\n      count: {\n        totalCharacters: lengthText,\n        charactersWithoutSpaces: value.replace(/\\s+/g, '').length,\n        words: value.trim().split(/\\s+/).length,\n        paragraphs: this.countParagraphs(value),\n        approximatelyPages: Math.ceil(lengthText / 4250),\n      },\n    });\n  };\n\n  render = () => (\n    <form>\n      <div>\n        <textarea\n          className=\"App-textarea\"\n          placeholder=\"Введите текст\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n      {this.state.value !== '' && (\n        <div>\n          Всего символов: {this.state.count.totalCharacters}<br />\n          Символов без пробелов: {this.state.count.charactersWithoutSpaces}<br />\n          Количество слов: {this.state.count.words}<br />\n          Количество абзацев: {this.state.count.paragraphs}<br />\n          Примерное количество страниц: {this.state.count.approximatelyPages}<br />\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default CountingTextLength;\n","import React, { Component } from 'react';\n\nclass OpeningMultipleLinks extends Component {\n  textToProcess = React.createRef();\n  state = { buttonDisabled: true };\n\n  handleChange = () => {\n    this.state.buttonDisabled && this.setState({ buttonDisabled: false });\n  };\n\n  handleSubmit = () => {\n    const urls = this.textToProcess.current.value.split('\\n');\n\n    urls.forEach((e) => {\n      const url = e.trim().replace(/&amp;/g, '&');\n      if (url) window.open(url);\n    });\n\n    this.setState({ buttonDisabled: true });\n  };\n\n  handleClear = () => {\n    this.setState({ buttonDisabled: true });\n  };\n\n  render = () => {\n    const userAgent = navigator.userAgent;\n    const informer = userAgent && userAgent.indexOf('Chrome') !== -1;\n\n    return (\n      <form>\n        <div>\n          <textarea\n            className=\"App-textarea\"\n            placeholder=\"Введите ссылки, по одному в строке\"\n            ref={this.textToProcess}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div>\n          <button type=\"button\" onClick={this.handleSubmit} disabled={this.state.buttonDisabled}>Open all URLs</button>\n          <button type=\"reset\" onClick={this.handleClear}>Clear</button>\n        </div>\n        {informer && (\n          <div>\n            По умолчанию всплывающие окна блокируются браузером.\n            Разрешите показывать всплывающие окна на этом сайте, чтобы открытие URL-адресов работало корректно.\n            {' '}<a href=\"/images/help-opening-multiple-links.png\" target=\"_blank\">Нажмите здесь</a> чтобы узнать как это сделать.\n          </div>\n        )}\n      </form>\n    );\n  };\n}\n\nexport default OpeningMultipleLinks;\n","import React, { Component } from 'react';\nimport LaunchTool from '../LaunchTool';\nimport Menu from '../Menu';\nimport DeletingIdenticalStrings from '../DeletingIdenticalStrings';\nimport ClearTextFormatting from '../ClearTextFormatting';\nimport CountingTextLength from '../CountingTextLength';\nimport OpeningMultipleLinks from '../OpeningMultipleLinks';\nimport './App.css';\n\nconst toolsList = [\n  {\n    nameComponent: DeletingIdenticalStrings,\n    title: {\n      ru: 'Удаление одинаковых строк',\n      en: 'Deleting identical lines',\n    },\n  },\n  {\n    nameComponent: ClearTextFormatting,\n    title: {\n      ru: 'Очистка текста от форматирования',\n      en: 'Clear text formatting',\n    },\n    description: {\n      ru: 'Форма позволяет очистить скопированный текст (с web-страниц или с текстовых редакторов) от форматирования текста, такого как: жирность, курсив, разные размеры шрифта, ссылки, изображения и пр.',\n      en: 'The form allows you to clear copied text (from web pages or text editors) from text formatting, such as: bold, italics, different font sizes, links, images, etc.',\n    },\n    comment: null,\n  },\n  {\n    nameComponent: CountingTextLength,\n    title: {\n      ru: 'Подсчет длины текста',\n      en: 'Counting text length',\n    },\n  },\n  {\n    nameComponent: OpeningMultipleLinks,\n    title: {\n      ru: 'Открыть несколько URL-адресов',\n      en: 'Open Multiple URLs',\n    },\n    description: {\n      ru: 'Этот инструмент одновременно открывает несколько ссылок в отдельных вкладках.',\n      en: 'This tool simultaneously opens several links in separate tabs.',\n    },\n  },\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Online-tools</h1>\n        </header>\n        <Menu toolsList={toolsList} />\n        <LaunchTool toolsList={toolsList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import registerServiceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}