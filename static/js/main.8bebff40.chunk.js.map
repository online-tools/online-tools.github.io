{"version":3,"sources":["LaunchTool.js","MenuItem.js","copyTextToClipboard.js","DeletingIdenticalStrings.js","ClearTextFormatting.js","CountingTextLength.js","App.js","index.js"],"names":["LaunchTool","_ref","toolsList","map","tool","Component","nameComponent","react_default","a","createElement","key","name","className","id","title","description","comment","MenuItem","items","href","copyTextToClipboard","text","navigator","clipboard","writeText","status","textArea","document","style","position","top","left","border","padding","width","height","value","body","appendChild","focus","select","execCommand","err","removeChild","fallbackCopyTextToClipboard","DeletingIdenticalStrings","textToProcess","React","createRef","state","countStrings","buttonDisabled","copyInfo","handleChange","_this","setState","submitHandler","e","strings","current","split","result","Object","toConsumableArray","Set","join","all","length","preventDefault","copyHandler","copyStatus","setTimeout","render","onSubmit","placeholder","ref","onChange","type","disabled","onClick","concat","ClearTextFormatting","CountingTextLength","count","countParagraphs","paragraphs","forEach","str","trim","target","lengthText","totalCharacters","charactersWithoutSpaces","replace","words","approximatelyPages","Math","ceil","ru","en","App","src_MenuItem","src_LaunchTool","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.8bebff40.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LaunchTool = ({ toolsList }) => {\r\n  const tools = toolsList.map(tool => {\r\n    let Component = tool.nameComponent;\r\n    return (\r\n      <div key={tool.nameComponent.name}>\r\n        <p className=\"App-intro\" id={tool.nameComponent.name}>{tool.title['ru']}</p>\r\n        {tool.description && <div>{tool.description['ru']}</div>}\r\n        <Component />\r\n        {tool.comment && <div>{tool.comment['ru']}</div>}\r\n      </div>\r\n    )\r\n  });\r\n  return (tools);\r\n};\r\n\r\nexport default LaunchTool;\r\n","import React from 'react';\r\n\r\nconst MenuItem = ({ toolsList }) => {\r\n  const items = toolsList.map(tool => (\r\n    <div className=\"menu-item\" key={tool.nameComponent.name}>\r\n      <a href={'#' + tool.nameComponent.name}>{tool.title['ru']}</a>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"menu\">{items}</div>\r\n  )\r\n};\r\n\r\nexport default MenuItem;\r\n","const fallbackCopyTextToClipboard = (text) => {\r\n  let status;\r\n  let textArea = document.createElement('textarea');\r\n\r\n  // Place in the upper left corner of the screen, regardless of the scroll position\r\n  textArea.style.position = 'fixed';\r\n  textArea.style.top = 0;\r\n  textArea.style.left = 0;\r\n\r\n  // Clearing the boundary and setting the minimum size\r\n  textArea.style.border = 'none';\r\n  textArea.style.padding = 0;\r\n  textArea.style.width = '1px';\r\n  textArea.style.height = '1px';\r\n\r\n  textArea.value = text;\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    status = document.execCommand('copy');\r\n  } catch (err) {\r\n    status = false;\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n  return status;\r\n};\r\n\r\nconst copyTextToClipboard = (text) => {\r\n  if (!navigator.clipboard) {\r\n    return fallbackCopyTextToClipboard(text);\r\n  }\r\n  navigator.clipboard.writeText(text);\r\n  return true;\r\n};\r\n\r\nexport default copyTextToClipboard;\r\n","import React, { Component } from 'react';\r\nimport copyTextToClipboard from './copyTextToClipboard';\r\n\r\nclass DeletingIdenticalStrings extends Component {\r\n  textToProcess = React.createRef();\r\n  state = {\r\n    countStrings: {},\r\n    buttonDisabled: true,\r\n    copyInfo: '',\r\n  };\r\n\r\n  handleChange = () => {\r\n    this.state.buttonDisabled && this.setState({ buttonDisabled: false });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    let strings = this.textToProcess.current.value.split('\\n');\r\n    let result = [ ...new Set(strings) ];\r\n    this.textToProcess.current.value = result.join('\\n');\r\n    this.setState({\r\n      countStrings: {\r\n        all: strings.length,\r\n        result: result.length,\r\n      },\r\n      buttonDisabled: true,\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  copyHandler = e => {\r\n    let copyStatus = copyTextToClipboard( this.textToProcess.current.value );\r\n    this.setState({\r\n      copyInfo: <span>{copyStatus ? 'Скопировано' : 'Не удалось скопировать' }</span>\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ copyInfo: '' });\r\n    }, 10000);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render = () => (\r\n    <form onSubmit={this.submitHandler}>\r\n      <div>\r\n        <textarea\r\n          className=\"App-textarea\"\r\n          placeholder=\"Введите текст\"\r\n          ref={this.textToProcess}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input type=\"submit\" value=\"Start\" disabled={this.state.buttonDisabled} />\r\n        <button onClick={this.copyHandler}>Copy text</button>\r\n        {this.state.copyInfo}\r\n        {this.state.countStrings['all'] && (\r\n          <div>{\r\n            this.state.countStrings['all'] === this.state.countStrings['result'] ?\r\n              'Дубликатов строк не найдено' :\r\n              `Всего строк было: ${this.state.countStrings['all']}.\r\n          Удалено: ${this.state.countStrings['all'] - this.state.countStrings['result']}.\r\n          Осталось: ${this.state.countStrings['result']}`\r\n          }</div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DeletingIdenticalStrings;\r\n","import React, { Component } from 'react';\r\nimport copyTextToClipboard from './copyTextToClipboard';\r\n\r\nclass ClearTextFormatting extends Component {\r\n  textToProcess = React.createRef();\r\n  state = { copyInfo: '' };\r\n\r\n  copyHandler = e => {\r\n    let copyStatus = copyTextToClipboard( this.textToProcess.current.value );\r\n    this.setState({\r\n      copyInfo: <span>{copyStatus ? 'Скопировано' : 'Не удалось скопировать' }</span>\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ copyInfo: '' });\r\n    }, 10000);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render = () => (\r\n    <form>\r\n      <div>\r\n        <textarea className=\"App-textarea\" ref={this.textToProcess} placeholder=\"Скопируйте сюда текст\r\nи затем скопируйте результат\" />\r\n      </div>\r\n      <div>\r\n        <button onClick={this.copyHandler}>Copy text</button>\r\n        {this.state.copyInfo}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ClearTextFormatting;\r\n","import React, { Component } from 'react';\r\n\r\nclass CountingTextLength extends Component {\r\n  state = { value: '', count: {} };\r\n\r\n  countParagraphs = text => {\r\n    let paragraphs = 0;\r\n    text.split('\\n').forEach((str) => {\r\n      if (str.trim()) paragraphs += 1;\r\n    });\r\n    return paragraphs;\r\n  };\r\n\r\n  handleChange = ({ target: { value } }) => {\r\n    let lengthText = value.length;\r\n    this.setState({\r\n      value,\r\n      count: {\r\n        totalCharacters: lengthText,\r\n        charactersWithoutSpaces: value.replace(/\\s+/g, '').length,\r\n        words: value.trim().split(/\\s+/).length,\r\n        paragraphs: this.countParagraphs(value),\r\n        approximatelyPages: Math.ceil(lengthText/4250),\r\n      },\r\n    });\r\n  };\r\n\r\n  render = () => (\r\n    <form>\r\n      <div>\r\n        <textarea\r\n          className=\"App-textarea\"\r\n          placeholder=\"Введите текст\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n      {this.state.value && (\r\n        <div>\r\n          Всего символов: {this.state.count.totalCharacters}<br />\r\n          Символов без пробелов: {this.state.count.charactersWithoutSpaces}<br />\r\n          Количество слов: {this.state.count.words}<br />\r\n          Количество абзацев: {this.state.count.paragraphs}<br />\r\n          Примерное количество страниц: {this.state.count.approximatelyPages}<br />\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CountingTextLength;\r\n","import React, { Component } from 'react';\nimport LaunchTool from './LaunchTool';\nimport MenuItem from './MenuItem';\nimport DeletingIdenticalStrings from './DeletingIdenticalStrings';\nimport ClearTextFormatting from './ClearTextFormatting';\nimport CountingTextLength from './CountingTextLength';\nimport './App.css';\n\nconst toolsList = [\n  {\n    nameComponent: DeletingIdenticalStrings,\n    title: {\n      ru: 'Удаление одинаковых строк',\n      en: 'Deleting identical lines',\n    },\n  },\n  {\n    nameComponent: ClearTextFormatting,\n    title: {\n      ru: 'Очистка текста от форматирования',\n      en: 'Clear text formatting',\n    },\n    description: {\n      ru: 'Форма позволяет очистить скопированный текст (с web-страниц или с текстовых редакторов) от форматирования ' +\n        'текста, такого как: жирность, курсив, разные размеры шрифта, ссылки, изображения и пр.',\n      en: 'The form allows you to clear copied text (from web pages or text editors) from text formatting, such as: ' +\n        'bold, italics, different font sizes, links, images, etc.',\n    },\n    comment: null,\n  },\n  {\n    nameComponent: CountingTextLength,\n    title: {\n      ru: 'Подсчет длины текста',\n      en: 'Counting text length',\n    },\n  },\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Online-tools</h1>\n        </header>\n        <MenuItem toolsList={toolsList} />\n        <LaunchTool toolsList={toolsList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}